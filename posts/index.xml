<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Z.Q.K</title>
    <link>https://www.qiankun.info/posts/</link>
    <description>Recent content in Posts on Z.Q.K</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>© 张乾坤</copyright>
    <lastBuildDate>Thu, 16 Feb 2023 13:06:19 +0800</lastBuildDate>
    <atom:link href="https://www.qiankun.info/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go HTTP标准库的一些总结</title>
      <link>https://www.qiankun.info/posts/http%E6%A0%87%E5%87%86%E5%BA%93%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 16 Feb 2023 13:06:19 +0800</pubDate>
      <guid>https://www.qiankun.info/posts/http%E6%A0%87%E5%87%86%E5%BA%93%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;h2 id=&#34;server&#34;&gt;Server&lt;/h2&gt;&#xA;&lt;p&gt;Server{}用来定义运行HTTP服务器所需的参数。&lt;/p&gt;&#xA;&lt;p&gt;Server.Shutdown()实现优雅地关闭服务器，而不会中断活跃的连接。&lt;/p&gt;&#xA;&lt;p&gt;Server.Shutdown()只会关闭处于StateIdle状态的连接。&lt;/p&gt;&#xA;&lt;p&gt;Server.Shutdown()先关闭所有打开的listener，再关闭所有处于StateIdle状态的连接，然后无限地等待所有连接进入StateIdle状态后将其关闭。&lt;/p&gt;&#xA;&lt;p&gt;连接处于StateIdle状态，表示已经处理完请求，并且处于keep-alive状态，等待新请求复用此连接。&lt;/p&gt;&#xA;&lt;p&gt;处于StateIdle状态的连接，可能进一步变成StateActive状态或StateClosed状态。&lt;/p&gt;&#xA;&lt;p&gt;连接处于StateActive状态，表示其已经从一个请求读取至少一个字节。&lt;/p&gt;&#xA;&lt;p&gt;一个请求进入handler之前，连接被设置为StateActive状态。&lt;/p&gt;&#xA;&lt;p&gt;一个请求处理完成后，连接从StateActive状态进入 StateClosed状态 或 StateHijacked状态 或StateIdle状态。&lt;/p&gt;&#xA;&lt;p&gt;连接处于StateClosed状态，表示已经被关闭，不会再进入其他状态。&lt;/p&gt;&#xA;&lt;p&gt;一个连接，最开始时处于StateNew状态，等待处理请求。&lt;/p&gt;&#xA;&lt;p&gt;连接被设置为 StateNew状态 时，Server将其视为活跃连接来管理。&lt;/p&gt;&#xA;&lt;p&gt;当连接被设置为 StateHijacked状态 或 StateClosed状态时，Server将其从管理的活跃连接中移除。&lt;/p&gt;&#xA;&lt;p&gt;处于 StateNew状态 的连接，可能进入 StateActive状态 或 StateClosed状态。&lt;/p&gt;&#xA;&lt;h2 id=&#34;client&#34;&gt;Client&lt;/h2&gt;&#xA;&lt;p&gt;Client发送请求只需要三个参数：Request、RoundTripper、超时时间。&lt;/p&gt;&#xA;&lt;p&gt;Client发送请求，最核心的部分就是靠RoundTripper做一次RoundTrip。&lt;/p&gt;&#xA;&lt;p&gt;RoundTripper只负责发送请求和接受响应，而cookies和重定向相关的处理由Client负责。&lt;/p&gt;&#xA;&lt;h2 id=&#34;transport&#34;&gt;Transport&lt;/h2&gt;&#xA;&lt;p&gt;Transport允许调用方注册scheme（http或https）对应的RoundTripper。&lt;/p&gt;&#xA;&lt;p&gt;Transport.DisableKeepAlives若为true，则不会复用空闲的连接，即每次roundtrip都会创建新连接。&lt;/p&gt;&#xA;&lt;p&gt;Transport.DisableKeepAlives若为true，则不会将连接放入空闲列表。&lt;/p&gt;&#xA;&lt;p&gt;Transport在进行roundtrip的时候，若出错则会自动判断是否需要重试。&lt;/p&gt;&#xA;&lt;p&gt;Transport进行roundtrip过程中，获取连接时会使用缓存的连接或创建新连接。&lt;/p&gt;&#xA;&lt;h2 id=&#34;persistconn&#34;&gt;persistConn&lt;/h2&gt;&#xA;&lt;p&gt;persistConn用来封装一个连接，通常是持久连接。&lt;/p&gt;&#xA;&lt;p&gt;persistConn代替Transport进行roundtrip。&lt;/p&gt;&#xA;&lt;p&gt;persistConn与服务端建立连接后，启动两个goroutine，分别是是读循环和写循环。&lt;/p&gt;&#xA;&lt;p&gt;Connection请求头，若值为close，表示客户端期望收到响应后断开连接。&lt;/p&gt;&#xA;&lt;p&gt;Connection请求头，若值为keep-alive，表示客户端期望保持连接，以便后续请求能复用。&lt;/p&gt;&#xA;&lt;p&gt;Connection请求头，HTTP/1.1的默认值为keep-alive。&lt;/p&gt;</description>
    </item>
    <item>
      <title>延迟关联</title>
      <link>https://www.qiankun.info/posts/%E5%BB%B6%E8%BF%9F%E5%85%B3%E8%81%94/</link>
      <pubDate>Mon, 17 May 2021 08:16:19 +0800</pubDate>
      <guid>https://www.qiankun.info/posts/%E5%BB%B6%E8%BF%9F%E5%85%B3%E8%81%94/</guid>
      <description>&lt;p&gt;&lt;em&gt;SQL优化&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何计算TCP的payload数据大小</title>
      <link>https://www.qiankun.info/posts/%E5%A6%82%E4%BD%95%E8%AE%A1%E7%AE%97tcp%E7%9A%84payload%E6%95%B0%E6%8D%AE%E5%A4%A7%E5%B0%8F/</link>
      <pubDate>Wed, 31 Mar 2021 17:31:11 +0800</pubDate>
      <guid>https://www.qiankun.info/posts/%E5%A6%82%E4%BD%95%E8%AE%A1%E7%AE%97tcp%E7%9A%84payload%E6%95%B0%E6%8D%AE%E5%A4%A7%E5%B0%8F/</guid>
      <description></description>
    </item>
    <item>
      <title>记一次redis攻击排查</title>
      <link>https://www.qiankun.info/posts/%E8%AE%B0%E4%B8%80%E6%AC%A1redis%E6%94%BB%E5%87%BB%E6%8E%92%E6%9F%A5/</link>
      <pubDate>Thu, 15 Oct 2020 16:18:14 +0800</pubDate>
      <guid>https://www.qiankun.info/posts/%E8%AE%B0%E4%B8%80%E6%AC%A1redis%E6%94%BB%E5%87%BB%E6%8E%92%E6%9F%A5/</guid>
      <description></description>
    </item>
    <item>
      <title>Go中复制map可能遇到坑</title>
      <link>https://www.qiankun.info/posts/go%E4%B8%AD%E5%A4%8D%E5%88%B6map%E5%8F%AF%E8%83%BD%E9%81%87%E5%88%B0%E5%9D%91/</link>
      <pubDate>Sat, 02 Nov 2019 14:03:25 +0800</pubDate>
      <guid>https://www.qiankun.info/posts/go%E4%B8%AD%E5%A4%8D%E5%88%B6map%E5%8F%AF%E8%83%BD%E9%81%87%E5%88%B0%E5%9D%91/</guid>
      <description></description>
    </item>
    <item>
      <title>Go Module本地依赖的两种玩法</title>
      <link>https://www.qiankun.info/posts/go-module%E6%9C%AC%E5%9C%B0%E4%BE%9D%E8%B5%96%E7%9A%84%E4%B8%A4%E7%A7%8D%E7%8E%A9%E6%B3%95/</link>
      <pubDate>Sun, 23 Jun 2019 11:34:55 +0800</pubDate>
      <guid>https://www.qiankun.info/posts/go-module%E6%9C%AC%E5%9C%B0%E4%BE%9D%E8%B5%96%E7%9A%84%E4%B8%A4%E7%A7%8D%E7%8E%A9%E6%B3%95/</guid>
      <description></description>
    </item>
    <item>
      <title>slice底层struct的数据结构</title>
      <link>https://www.qiankun.info/posts/slice%E5%BA%95%E5%B1%82struct%E7%9A%84%E5%9C%B0%E5%9D%80/</link>
      <pubDate>Thu, 13 Jun 2019 17:51:40 +0800</pubDate>
      <guid>https://www.qiankun.info/posts/slice%E5%BA%95%E5%B1%82struct%E7%9A%84%E5%9C%B0%E5%9D%80/</guid>
      <description>通过slice成员的地址观察其底层struct的数据结构</description>
    </item>
    <item>
      <title>折腾hugo</title>
      <link>https://www.qiankun.info/posts/%E6%8A%98%E8%85%BEhugo/</link>
      <pubDate>Sun, 09 Jun 2019 22:42:17 +0800</pubDate>
      <guid>https://www.qiankun.info/posts/%E6%8A%98%E8%85%BEhugo/</guid>
      <description>hugo折腾过程的一些记录</description>
    </item>
    <item>
      <title>索引与缓存的坑</title>
      <link>https://www.qiankun.info/posts/%E7%B4%A2%E5%BC%95%E4%B8%8E%E7%BC%93%E5%AD%98%E7%9A%84%E5%9D%91/</link>
      <pubDate>Sun, 09 Jun 2019 21:45:40 +0800</pubDate>
      <guid>https://www.qiankun.info/posts/%E7%B4%A2%E5%BC%95%E4%B8%8E%E7%BC%93%E5%AD%98%E7%9A%84%E5%9D%91/</guid>
      <description></description>
    </item>
    <item>
      <title>数据类型在网络传输中的表现</title>
      <link>https://www.qiankun.info/posts/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%9C%A8%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%8E%B0/</link>
      <pubDate>Sat, 08 Jun 2019 21:56:26 +0800</pubDate>
      <guid>https://www.qiankun.info/posts/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%9C%A8%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%8E%B0/</guid>
      <description></description>
    </item>
    <item>
      <title>代理小故障排查</title>
      <link>https://www.qiankun.info/posts/%E4%BB%A3%E7%90%86%E5%B0%8F%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/</link>
      <pubDate>Sat, 08 Jun 2019 21:55:46 +0800</pubDate>
      <guid>https://www.qiankun.info/posts/%E4%BB%A3%E7%90%86%E5%B0%8F%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/</guid>
      <description></description>
    </item>
    <item>
      <title>位运算在PHP错误级别中的运用</title>
      <link>https://www.qiankun.info/posts/%E4%BD%8D%E8%BF%90%E7%AE%97%E5%9C%A8php%E9%94%99%E8%AF%AF%E7%BA%A7%E5%88%AB%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8/</link>
      <pubDate>Sat, 08 Jun 2019 21:54:53 +0800</pubDate>
      <guid>https://www.qiankun.info/posts/%E4%BD%8D%E8%BF%90%E7%AE%97%E5%9C%A8php%E9%94%99%E8%AF%AF%E7%BA%A7%E5%88%AB%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8/</guid>
      <description>&lt;p&gt;首先，我们要解决的第一个问题是&lt;/p&gt;</description>
    </item>
    <item>
      <title>C语言中的数组和指针</title>
      <link>https://www.qiankun.info/posts/c%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E6%95%B0%E7%BB%84%E5%92%8C%E6%8C%87%E9%92%88/</link>
      <pubDate>Sat, 08 Jun 2019 21:54:28 +0800</pubDate>
      <guid>https://www.qiankun.info/posts/c%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E6%95%B0%E7%BB%84%E5%92%8C%E6%8C%87%E9%92%88/</guid>
      <description>&lt;p&gt;先看段代码&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
