<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>anki原理 on Z.Q.K</title>
    <link>https://example.com/tags/anki%E5%8E%9F%E7%90%86/</link>
    <description>Recent content in anki原理 on Z.Q.K</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 张乾坤</copyright>
    <lastBuildDate>Sun, 05 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://example.com/tags/anki%E5%8E%9F%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Anki卡片的本质</title>
      <link>https://example.com/posts/anki%E5%8D%A1%E7%89%87%E7%9A%84%E6%9C%AC%E8%B4%A8/</link>
      <pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/posts/anki%E5%8D%A1%E7%89%87%E7%9A%84%E6%9C%AC%E8%B4%A8/</guid>
      <description>我们对于卡片的操作，大体可以分为两种：
 生成卡片 回忆卡片  生成卡片，指的是输入字段内容后生成一张或多张新卡片。
根据Anki学习中卡片间隔的处理方式，学习也是回忆的过程，所以学习和复习卡片可以统称回忆卡片。
生成和回忆卡片的单位不同
 生成卡片的单位是note 回忆卡片的单位是卡片 一个note可能包含一张或多张卡片  严格来说，并不存在“制作卡片”一说
 卡片非由我们直接制作出来，而是由Anki自动生成 并没有一个独立的对象记录卡片的“完整信息”，而是由Anki动态生成 Anki所知的是一些配置和我们输入的内容  通常所说的“制作卡片”，实际上是在制作note，更准确地说，是在填充note字段。
卡片的动态生成所需的“原料”如下：
 卡片的基本信息 卡片所属的note信息 note所属的note类型 卡片使用的卡片类型  可以认为，卡片的本质就是由以上四种数据动态生成的对象。</description>
    </item>
    
    <item>
      <title>Anki使用的6个文件或文件夹</title>
      <link>https://example.com/posts/anki%E4%BD%BF%E7%94%A8%E7%9A%846%E4%B8%AA%E6%96%87%E4%BB%B6%E6%88%96%E6%96%87%E4%BB%B6%E5%A4%B9/</link>
      <pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/posts/anki%E4%BD%BF%E7%94%A8%E7%9A%846%E4%B8%AA%E6%96%87%E4%BB%B6%E6%88%96%E6%96%87%E4%BB%B6%E5%A4%B9/</guid>
      <description>Anki的每个collection会使用到6个文件或文件夹
 collection.anki2 deleted.txt collection.media collection.media.db2 media.trash backups  collection.anki2
 一个sqlite数据库文件 所有配置、卡片等信息都保存在这个文件 有很多张表，包括但不限于：  deck - deck表 col - collection表 config - collection配置表 deck_config - deck配置表 cards - 卡片表 notetypes - note类型表 可以使用DB Browser for SQLite打开    deleted.txt
 一个文本文件 一般的编辑器都能直接打开 有三个字段  nid  note ID，即唯一标识 因为Anki不支持删除单张卡片，只支持删除note，所以只记录了note ID   mid  note类型ID   fields  note各字段的内容 误删的note可从这个文件中找回      collection.media
 一个文件夹 保存了所有卡片用到的媒体文件，例如图片、音视频等 如果媒体文件很多，磁盘读写慢，导入或导出collection会耗时较久，尤其是导入 如果频繁使用媒体文件，这个文件夹通常是最大的  collection.</description>
    </item>
    
    <item>
      <title>一张Anki卡片的N种状态</title>
      <link>https://example.com/posts/%E4%B8%80%E5%BC%A0anki%E5%8D%A1%E7%89%87%E7%9A%84n%E7%A7%8D%E7%8A%B6%E6%80%81/</link>
      <pubDate>Sun, 22 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/posts/%E4%B8%80%E5%BC%A0anki%E5%8D%A1%E7%89%87%E7%9A%84n%E7%A7%8D%E7%8A%B6%E6%80%81/</guid>
      <description>整体上，一张Anki卡片有“正常”和“筛选”两种状态。
  如果卡片经过筛选条件，被放入了筛选Deck，则处于“筛选”状态，否则都处于“正常”状态。
  “正常”状态   &amp;ldquo;正常&amp;quot;状态下的卡片，又可以分为以下4个子状态，每个子状态对应了卡片生命周期的不同阶段：
 “新”状态 “学习中”状态 “复习”状态 “重学中”状态    “新”状态  顾名思义，这是所有卡片的原始状态。 只有“新”状态下的卡片，才有“位置”这一属性。 “位置”用来决定新卡片的显示顺序，可通过查看其在Browser中的Due字段确认它的值，格式是New #123。    “学习中”状态  “学习中”状态是“新”状态的下一个状态，新卡片一旦显示出来便默认进入此状态。 “学习中”状态的卡片只有两个重要的属性，剩余步骤数和被调度的间隔时长。 剩余步骤数的计算依据有两个  回答卡片时选择的难易程度 Deck配置 -&amp;gt; New Cards -&amp;gt; Learning steps   只有在回答Again和Good时，才会去计算剩余步骤数，Hard会使剩余步骤数保持不变，而Easy则直接将卡片推进到“复习”状态，感兴趣的同学可以阅读Anki学习中卡片间隔的处理方式​这篇文章。    “复习”状态  持续使用Anki一段时间后，“复习”状态是绝大多数卡片应处于的状态，也是间隔重复算法发挥作用的阶段。 为了应用间隔重复算法，卡片处于“复习”状态时会拥有更多的属性，例如：  上次回答后计算出的到期日期 当前col的创建天数 间隔因子 遗忘次数 遗忘次数是否超过了阈值   “复习”状态下，卡片每个属性的作用较复杂，后面单独撰文说明。    “重学中”状态  卡片处于“重学中”状态时，处理方式与“学习中”状态基本相同。 每次卡片从“复习”状态进入“重学中”状态，遗忘次数就会增加一次。    “筛选”状态   卡片被放入筛选Deck中便进入“筛选”状态，有两个子状态</description>
    </item>
    
  </channel>
</rss>
